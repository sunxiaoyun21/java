/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-12-05 06:09:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Title</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<form action=\"\" enctype=\"application/x-www-form-urlencoded\"></form>\r\n");
      out.write("<input type=\"text\" id=\"name\" name=\"name\" >\r\n");
      out.write("<button id=\"btn\">ssr</button>\r\n");
      out.write("<div class=\"result\"></div>\r\n");
      out.write("<script>\r\n");
      out.write("    (function () {\r\n");
      out.write("      function creatxmlHttp() {\r\n");
      out.write("          var xmlHttp=null;\r\n");
      out.write("          if(window.ActiveXObject){\r\n");
      out.write("              xmlHttp=new XMLHttpRequest(\"Microsoft.XMLHTTP\")\r\n");
      out.write("          }else{\r\n");
      out.write("              xmlHttp=new XMLHttpRequest()\r\n");
      out.write("          }\r\n");
      out.write("          return xmlHttp;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      document.querySelector(\"#btn\").onclick=function () {\r\n");
      out.write("          var name=document.querySelector(\"#name\").value;\r\n");
      out.write("         //sendPost(name);\r\n");
      out.write("         sendGet(name);\r\n");
      out.write("      }\r\n");
      out.write("      function sendGet(name) {\r\n");
      out.write("          var xml=creatxmlHttp();\r\n");
      out.write("          xml.open(\"get\",\"/ajax?name=\"+name);\r\n");
      out.write("          xml.send();\r\n");
      out.write("      }\r\n");
      out.write("      function sendPost(name) {\r\n");
      out.write("          var xml=creatxmlHttp();\r\n");
      out.write("          xml.open(\"post\",\"/ajax\")\r\n");
      out.write("          xml.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\")\r\n");
      out.write("\r\n");
      out.write("          //配置回调函数\r\n");
      out.write("        xml.onreadystatechange=function () {\r\n");
      out.write("            var state=xml.readyState;\r\n");
      out.write("            if(state==4){\r\n");
      out.write("                var httpState=xml.status//获取http状态码\r\n");
      out.write("                if(httpState==200){\r\n");
      out.write("                    //获取服务端返回的字符串\r\n");
      out.write("                    var results=xml.responseText\r\n");
      out.write("                    var div=document.querySelector(\".result\")\r\n");
      out.write("                    if(results==\"可用\"){\r\n");
      out.write("                        div.innerText=\"该账号可用\"\r\n");
      out.write("                    }else {\r\n");
      out.write("                        div.innerText=\"该账号已被占用\"\r\n");
      out.write("                    }\r\n");
      out.write("                }else {\r\n");
      out.write("                    alert(\"服务器错误\"+httpState)\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("          //发送请求\r\n");
      out.write("          xml.send(\"name=\"+name);\r\n");
      out.write("      }\r\n");
      out.write("  })();\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
