<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd">
    <!--基于注解的bin管理-->
    <context:component-scan base-package="com.sxy"/>
    <!--基于注解的AOP-->
    <aop:aspectj-autoproxy/>

    <!--配置数据源（数据库链接池）-->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql:///mydb"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>-->

    <context:property-placeholder location="config.properties"/>
     <bean  id="dataSource"   class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
         <property name="driverClassName" value="${jdbc.driver}"/>
         <property name="url" value="${jdbc.url}"/>
         <property name="username" value="${jdbc.username}"/>
         <property name="password" value="${jdbc.password}"/>
     </bean>

    <!--配置jdbc模板-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
        <property name="dataSource" ref="dataSource" />
    </bean>

        <!--mybatis 9sqlsessionFactory-->
        <bean  id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <!--数据源-->
            <property name="dataSource" ref="dataSource"/>
            <!--别名类所在的包-->
            <property name="typeAliasesPackage" value="com.sxy.pojo"/>
            <!--mapper文件所在的位置-->
            <property name="mapperLocations" value="classpath:mapper/*.xml"/>
            <!--其他配置-->
            <property name="configuration">
                <bean class="org.apache.ibatis.session.Configuration">
                    <property name="mapUnderscoreToCamelCase" value="true"/>
                </bean>
            </property>
        </bean>
    <context:property-placeholder location="slf4j.properties"/>
    <!--mapper的自动扫描-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.sxy.mapper"/>
    </bean>

    <!--<bean id="userdao" class="com.sxy.dao.impl.UserdaoImpl"/>
    <bean id="userserviceImpl" class="com.sxy.service.impl.UserServiceImpl">
        <property name="userdao" ref="userdao" />
    </bean>


    <bean id="aopAspect" class="com.sxy.aspect.AopAspect"/>
    <aop:config>
        <aop:aspect ref="aopAspect">
            <aop:pointcut id="pt" expression="execution(* com.sxy.service..*.*(..))"/>
           &lt;!&ndash; <aop:before  method="beforeAspect" pointcut-ref="pt"/>
            <aop:after-returning method="afterAspect" pointcut-ref="pt" returning="result"/>
            <aop:after-throwing method="exceptionAspect" pointcut-ref="pt"/>
            <aop:after method="afterExceptionAspect" pointcut-ref="pt"/>&ndash;&gt;
            <aop:around method="aroundAspect" pointcut-ref="pt"/>
        </aop:aspect>
    </aop:config>

-->


    <!-- scope="prototype" 代表是每次获取都是不同的对象实例
         scope="singleton"代表单例
    <alias name="userdao" alias="userdaoimpl"/>别名
    lazy-init="true" 代表对象不会再创建时被调用

    -->

   <!-- <bean id="userdao" class="com.sxy.dao.impl.UserdaoImpl" scope="prototype" />
    <alias name="userdao" alias="userdaoimpl"/>-->

   <!-- <bean id="userservice" class="com.sxy.service.impl.UserServiceImpl">
        <property name="age" value="13"/>
        <property name="name" value="jack"/>
        <property name="names">
            <list>
                <value>tom</value>
                <value>jack</value>
            </list>
        </property>
        <property name="properties">
           <props>
               <prop key="p1">p1</prop>
               <prop key="p2">p2</prop>
           </props>
        </property>
        <property name="userdao" ref="userdao" />
    </bean>-->
    <!--autowire="byName"或者是bytype是基于set方法的自动注入-->
    <!--<bean id="userservice" class="com.sxy.service.impl.UserServiceImpl" autowire="byName"/>-->


    <!--<bean id="userservice" class="com.sxy.service.impl.UserServiceImpl">
        <property name="userdao" ref="userdao"/>
    </bean>-->
    <!--构造方法注入-->
  <!--  <bean id="userservice2" class="com.sxy.service.impl.UserServiceImpl2">
        &lt;!&ndash;<constructor-arg name="userdao" ref="userdao"/>&ndash;&gt;
       &lt;!&ndash; <constructor-arg type="com.sxy.dao.Userdao" ref="userdao"/>&ndash;&gt;
        <constructor-arg index="0" ref="userdao"/>

    </bean>-->

    <!--自动注入-->
    <!--autowire="constructor"是基于构造方法注入的自动注入-->
    <!--<bean id="userservice2" class="com.sxy.service.impl.UserServiceImpl2" autowire="constructor"/>-->

</beans>